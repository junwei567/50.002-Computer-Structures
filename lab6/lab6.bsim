| include instruction macros and test jig
.include beta.uasm
.include lab6checkoff.uasm


count_bull_cows:                      | your subroutine must have this name
	PUSH(LP)                            | standard subroutine entry sequence
	PUSH(BP)
	MOVE(SP, BP)

	PUSH(R1)                            | int bulls
	PUSH(R2)                            | int cows
	PUSH(R3)                            | int i
	PUSH(R4)                            | int j
	PUSH(R5)                            | int btemp
	PUSH(R6)                            | int atry
	PUSH(R7)                            | int btry
	PUSH(R8)                            | int mask
	PUSH(R9)                            | a
	PUSH(R10)                           | b
	PUSH(R11)
	PUSH(R12)
	PUSH(R13)
	PUSH(R14)

	ADDC(R31, 0, R1)
	CMOVE(0, R2)
	LD(BP, -12, R9)
	LD(BP, -16, R10)
	CMOVE(0, R3)
	CMOVE(0xF, R8)
	BR(check_loop_bull)

check_bull:
	AND(R9,R8,R11)
	AND(R10,R8,R12)
	CMPEQ(R11,R12,R13)
	BEQ(R13,shift_mask_i,R31)
	ADDC(R1,1,R1)
	OR(R9,R8,R9)
	OR(R10,R8,R10)

shift_mask_i:
	SHLC(R8,4,R8)
	ADDC(R3,1,R3)

check_loop_bull:
	CMPLTC(R3,4,R14)
	BNE(R14,check_bull,R31)
	CMOVE(0,R2)
	CMOVE(0,R3)
	BR(check_loop_cow)

check_cow:
	ANDC(R9,0xF,R6)
	SHRC(R9,4,R9)
	CMPEQC(R6,0xF,R11)
	BNE(R11,iterate_i,R31)
	ADDC(R10,0,R5)
	CMOVE(0xF,R8)
	CMOVE(0,R4)
	BR(check_j)

check_cow_again:
	ANDC(R5,0xF,R7)
	SHRC(R5,4,R5)
	CMPEQ(R7,R6,R12)
	BEQ(R12,shift_mask_j,R31)
	ADDC(R2,1,R2)
	OR(R10,R8,R10)
	BR(iterate_i)

shift_mask_j:
	SHLC(R8,4,R8)
	ADDC(R4,1,R4)

check_j:
	CMPLTC(R4,4,R13)
	BNE(R13,check_cow_again,R31)

iterate_i:
	ADDC(R3,1,R3)

iterate_j:
	ADDC(R4,1,R4)

check_loop_cow:
	CMPLTC(R3,4,R14)
	BNE(R14,check_cow,R31)
	SHLC(R1,4,R1)
	ADD(R1,R2,R0)     | ans in R0

	POP(R14)
	POP(R13)
	POP(R12)
	POP(R11)
	POP(R8)
	POP(R7)
	POP(R6)
	POP(R5)
	POP(R4)
	POP(R3)
	POP(R10)
	POP(R9)
	POP(R2)
	POP(R1)

	MOVE(BP,SP)                         | standard subroutine exit sequence
	POP(BP)
	POP(LP)
	RTN()

StackBase:
	LONG(.+4)                           | Pointer to bottom of stack
	. = .+0x1000                        | Reserve space for stack...
